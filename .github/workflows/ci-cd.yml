name: CI/CD for ToDo List

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: vaseab/todo-backend:latest

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: vaseab/todo-frontend:latest

      - name: Run Docker Compose for tests
        run: |
          echo "Creating Docker network..."
          docker network create todo-net || true

          echo "Starting MySQL..."
          docker run -d --name todo-mysql --network todo-net -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_DATABASE=tododb -p 3307:3306 mysql:8

          echo "Starting Mailhog..."
          docker run -d --name mailhog --network todo-net -p 8025:8025 -p 1025:1025 mailhog/mailhog

          echo "Building backend image..."
          docker build -t todo-backend ./backend

          echo "Running backend container..."
          docker run -d --name todo-backend --network todo-net \
            -e DB_HOST=todo-mysql -e DB_USER=root -e DB_PASSWORD=123456 \
            -e DB_NAME=tododb -e DB_PORT=3306 \
            -e SMTP_HOST=mailhog -e SMTP_PORT=1025 \
            -p 3001:3001 todo-backend

          echo "Building frontend image..."
          docker build -t todo-frontend ./frontend

          echo "Running frontend container..."
          docker run -d --name todo-frontend --network todo-net -p 3000:3000 todo-frontend

          echo "Waiting for containers to start..."
          sleep 15

      - name: Test Backend API
        run: curl -f http://localhost:3001/api/tasks || exit 1

      - name: Test Frontend
        run: curl -f http://localhost:3000 || exit 1

      - name: Stop containers
        run: docker compose down --volumes --remove-orphans
