name: CI/CD for ToDo List

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build backend image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest ./backend

      - name: Build frontend image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest ./frontend

      - name: Push images to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest

      - name: Run containers for testing
        run: |
          docker network create todo-net || true

          docker run -d --name todo-mysql --network todo-net \
            -e MYSQL_ROOT_PASSWORD=123456 \
            -e MYSQL_DATABASE=tododb \
            -p 3307:3306 \
            mysql:8

          docker run -d --name mailhog --network todo-net \
            -p 8025:8025 -p 1025:1025 \
            mailhog/mailhog

          docker run -d --name todo-backend --network todo-net \
            -e DB_HOST=todo-mysql \
            -e DB_USER=root \
            -e DB_PASSWORD=123456 \
            -e DB_NAME=tododb \
            -e DB_PORT=3306 \
            -e SMTP_HOST=mailhog \
            -e SMTP_PORT=1025 \
            -p 3001:3001 \
            ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest

          docker run -d --name todo-frontend --network todo-net \
            -p 3000:3000 \
            ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest

          echo "Waiting for services to initialize..."
          sleep 15

      - name: Test Backend API
        run: curl -f http://localhost:3001/api/tasks || exit 1

      - name: Test Frontend
        run: curl -f http://localhost:3000 || exit 1

      - name: Clean up containers and network
        run: |
          docker rm -f todo-frontend todo-backend mailhog todo-mysql || true
          docker network rm todo-net || true
